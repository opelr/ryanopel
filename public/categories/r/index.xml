<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Ryan Opel</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Ryan Opel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 01 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Look into BoardGameGeek</title>
      <link>/post/boardgame-analysis/</link>
      <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/boardgame-analysis/</guid>
      <description>Much has been said about this topic, but if you haven’t heard, board games are cool again1 – so popular, in fact, that we have a dedicated tabletop games store just two blocks from our house in Portland! It’s not just physical spaces that have been impacted by this wave of popularity – virtual board game communities are ballooning. Reddit’s r/boardgames board boasts nearly 600,000 subscribers and is the 157th largest community on the website at the time of writing, and videos from Wil Wheaton’s YouTube series Tabletop regularly receive over 500,000 views.</description>
    </item>
    
    <item>
      <title>Rolling functions on non-consecutive grouped data using dplyr and zoo</title>
      <link>/post/dplyr-zoo-rollapply/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/dplyr-zoo-rollapply/</guid>
      <description>When working with time-series data in R, zoo is an indispensable tool to keep on your bench. Here, I demonstrate a use case for one of the package’s best functions, rollapply1, and one solution for handling non-consecutive time-series data.
In our hypothetical experiment, we have three individuals (“A”, “B”, and “C”) who were supposed to have data at ten consecutive time-points. However, multiple time-points for each individual are missing in our final dataset.</description>
    </item>
    
    <item>
      <title>opelR R Package</title>
      <link>/post/opelr-r-package/</link>
      <pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/opelr-r-package/</guid>
      <description>Following the advice of the wonderful Hadley Wickham, Hillary Parker, and Karl Broman, I took the plunge last year and pushed the first version of my personal R package. Conveniently, my name fits the motif of R-related puns (useRs, etc.), and so opelR was born!
Unlike the most popular packages on CRAN, there’s no unifying theme to the functions included, except that they make my life easier. There are some simple functions, like sem that computes standard error of the mean, and col2num, which facilities use of some openxlsx functions and allows users to call columns by letter index rather than by number.</description>
    </item>
    
  </channel>
</rss>