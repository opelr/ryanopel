<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ryan Opel</title>
    <link>/post/</link>
    <description>Recent content in Posts on Ryan Opel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 26 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rolling functions on non-consecutive grouped data using dplyr and zoo</title>
      <link>/post/dplyr-zoo-rollapply/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/dplyr-zoo-rollapply/</guid>
      <description>When working with time-series data in R, zoo is an indispensable tool to keep on your bench. Here, I demonstrate a use case for one of the package’s best functions, rollapply1, and one solution for handling non-consecutive time-series data.
In our hypothetical experiment, we have three individuals (“A”, “B”, and “C”) who were supposed to have data at ten consecutive time-points. However, multiple time-points for each individual are missing in our final dataset.</description>
    </item>
    
    <item>
      <title>opelR R Package</title>
      <link>/post/opelr-r-package/</link>
      <pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/opelr-r-package/</guid>
      <description>Following the advice of the wonderful Hadley Wickham, Hillary Parker, and Karl Broman, I took the plunge last year and pushed the first version of my personal R package. Conveniently, my name fits the motif of R-related puns (useRs, etc.), and so opelR was born!
Unlike the most popular packages on CRAN, there’s no unifying theme to the functions included, except that they make my life easier. There are some simple functions, like sem that computes standard error of the mean, and col2num, which facilities use of some openxlsx functions and allows users to call columns by letter index rather than by number.</description>
    </item>
    
    <item>
      <title>PowerShell Profile &amp; Functions</title>
      <link>/post/powershell-profile/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/powershell-profile/</guid>
      <description>For those unfamiliar, the PowerShell profile (Microsoft.Powershell_profile.ps1) is the Windows PowerShell equivalent to the Linux and Mac OS .bashrc file, which loads when the terminal starts and allows user to save functions, aliases, and general shell settings between sessions. How-To Geek has a good article that covers how to set up a basic PowerShell profile, which I recommend reading before moving forward. All the code below can go in your PS Profile in any order, but I’ll present it in the order that makes the most sense to me.</description>
    </item>
    
  </channel>
</rss>