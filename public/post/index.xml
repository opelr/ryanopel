<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Ryan Opel</title>
    <link>/post/</link>
    <description>Recent content in Posts on Ryan Opel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 26 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rolling functions on non-consecutive grouped data using dplyr and zoo</title>
      <link>/post/dplyr-zoo-rollapply/</link>
      <pubDate>Thu, 26 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/dplyr-zoo-rollapply/</guid>
      <description>When working with time-series data in R, zoo is an indispensable tool to keep on your bench. Here, I demonstrate a use case for one of the package’s best functions, rollapply1, and one solution for handling non-consecutive time-series data.
In our hypothetical experiment, we have three individuals (“A”, “B”, and “C”) who were supposed to have data at ten consecutive time-points. However, multiple time-points for each individual are missing in our final dataset.</description>
    </item>
    
    <item>
      <title>PowerShell Profile &amp; Functions</title>
      <link>/post/powershell-profile/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/powershell-profile/</guid>
      <description>Until starting my current position, I had been a pretty strict Mac OS user. As one can expect from a job in the public sector however, I quickly had to face the reality of full-time Windows use, which I had successfully avoided since my days as a high school student with a laptop that barely ran Vista. While initially hesitant, I’ve become gradually more accustomed to and fond of the Windows environment – even running Windows 10 as the primary operating system on my desktop at home.</description>
    </item>
    
    <item>
      <title>opelR R Package</title>
      <link>/post/opelr-r-package/</link>
      <pubDate>Thu, 12 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/opelr-r-package/</guid>
      <description>Following the advice of the wonderful Hadley Wickham, Hillary Parker, and Karl Broman, I took the plunge last year and drafted the first version of my very own R package. Conveniently, my name fits the motif of R-related puns (useRs, etc.), and so opelR was born!
Unlike many R packages you’re used to importing into your scripts, there’s no real unifying theme or problem these functions are trying to solve, except to make my life more convenient.</description>
    </item>
    
  </channel>
</rss>